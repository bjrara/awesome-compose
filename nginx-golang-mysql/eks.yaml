---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  default.conf: |
    server {
      listen 80;

      location / {
        proxy_pass http://api:8080;
      }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mariadb:10-focal
          args:
          - "--default-authentication-plugin=mysql_native_password"
          env:
            - name: MYSQL_DATABASE
              value: example
            - name: MYSQL_ROOT_PASSWORD
              value: password
          ports:
            - containerPort: 3306
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql-data
      volumes:
        - name: mysql-data
          hostPath:
            path: /data/mysql         # Change this path as needed
            type: DirectoryOrCreate

---
apiVersion: v1
kind: Service
metadata:
  name: db
spec:
  selector:
    app: mysql
  ports:
    - port: 3306
      targetPort: 3306

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      annotations:
        instrumentation.opentelemetry.io/inject-go: "true"
        instrumentation.opentelemetry.io/otel-go-auto-target-exe: "/code/bin/backend"
      labels:
        app: api
    spec:
      containers:
        - name: api
          image: 633750930120.dkr.ecr.us-east-1.amazonaws.com/sample-apps:nginx-golang-mysql-backend 
          ports:
            - containerPort: 8080
          volumeMounts:
          - name: db-password-volume
            mountPath: /run/secrets/db-password
            subPath: password
      volumes:
      - name: db-password-volume
        secret:
          secretName: db-password

---
apiVersion: v1
kind: Secret
metadata:
  name: db-password
  namespace: default
type: Opaque
data:
  password: cGFzc3dvcmQ= 
---
apiVersion: v1
kind: Service
metadata:
  name: api
spec:
  selector:
    app: api
  ports:
    - port: 8080
      targetPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      annotations:
        instrumentation.opentelemetry.io/inject-nginx: "true"
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:alpine
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config

---
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  selector:
    app: nginx
  ports:
    - port: 80
      targetPort: 80
  type: LoadBalancer
